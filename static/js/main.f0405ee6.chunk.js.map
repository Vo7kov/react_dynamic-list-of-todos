{"version":3,"sources":["types/SortType.ts","components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortType","TodoFilter","query","onQueryChange","onSelectChange","sortType","className","onChange","event","target","value","ALL","ACTIVE","COMPLETED","type","placeholder","length","style","pointerEvents","onClick","TodoList","todos","selectedTodoId","setSelectedTodoId","showModal","map","todo","title","id","completed","classNames","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","setIsModalShowed","useState","user","setUser","setTodos","selectedTodo","find","useEffect","todosFromServer","userId","userFromServer","close","href","email","name","App","setQuery","setSortType","isModalShowed","filteredTodos","visibleTodos","filter","toLowerCase","includes","getFilteredTodos","todoId","param","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0405ee6.chunk.js","sourcesContent":["export enum SortType {\n  ALL,\n  ACTIVE,\n  COMPLETED,\n}\n","import React from 'react';\n\nimport { SortType } from '../../types/SortType';\n\ntype Props = {\n  query: string,\n  onQueryChange: (param: string) => void,\n  onSelectChange: (param: SortType) => void,\n  sortType: SortType,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  onSelectChange,\n  sortType,\n}) => {\n  const hadnleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onSelectChange(+event.target.value as SortType);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onQueryChange(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={hadnleSelectChange}\n            value={sortType}\n          >\n            <option value={SortType.ALL}>All</option>\n            <option value={SortType.ACTIVE}>Active</option>\n            <option value={SortType.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length !== 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQueryChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number,\n  setSelectedTodoId: (todoId: number) => void,\n  showModal: (param: boolean) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  setSelectedTodoId,\n  showModal,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            title,\n            id,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames(\n                {\n                  'has-background-info-light': selectedTodoId === id,\n                },\n              )}\n              key={id}\n            >\n              <td className=\"is-vcentered\">\n                {id}\n              </td>\n              <td\n                className=\"is-vcentered\"\n              >\n                {completed && (\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames(\n                    {\n                      'has-text-danger': completed === false,\n                      'has-text-success': completed,\n                    },\n                  )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    showModal(true);\n                    setSelectedTodoId(id);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames(\n                        'far',\n                        {\n                          'fa-eye': selectedTodoId !== id,\n                          'fa-eye-slash': selectedTodoId === id,\n                        },\n                      )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL}${url}.json`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useEffect } from 'react';\n\nimport { Loader } from '../Loader';\n\nimport { getTodos, getUser } from '../../api';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodoId: number,\n  setSelectedTodoId: (todoId: number) => void,\n  setIsModalShowed: (param: boolean) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodoId,\n  setSelectedTodoId,\n  setIsModalShowed,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(userFromServer => setUser(userFromServer));\n    }\n  }, [selectedTodo]);\n\n  const close = () => {\n    setIsModalShowed(false);\n    setSelectedTodoId(0);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div\n        className=\"modal-background\"\n        onClick={close}\n      />\n\n      {!user || !selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={close}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong\n                  className=\"has-text-success\"\n                >\n                  Done\n                </strong>\n              ) : (\n                <strong\n                  className=\"has-text-danger\"\n                >\n                  Planned\n                </strong>\n              )}\n\n              {' by '}\n\n              <a\n                href={`mailto:${user.email}`}\n              >\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { SortType } from './types/SortType';\n\nimport { getTodos } from './api';\n\nconst getFilteredTodos = (\n  todos: Todo[],\n  sortType: SortType,\n  query: string,\n) => {\n  let visibleTodos = [...todos];\n\n  switch (sortType) {\n    case SortType.ACTIVE: {\n      visibleTodos = visibleTodos.filter(todo => todo.completed === false);\n      break;\n    }\n\n    case SortType.COMPLETED: {\n      visibleTodos = visibleTodos.filter(todo => todo.completed);\n      break;\n    }\n\n    case SortType.ALL:\n    default: {\n      break;\n    }\n  }\n\n  if (query) {\n    visibleTodos = visibleTodos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  return visibleTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const [query, setQuery] = useState('');\n  const [sortType, setSortType] = useState(SortType.ALL);\n\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [isModalShowed, setIsModalShowed] = useState(false);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  const filteredTodos = getFilteredTodos(todos, sortType, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                sortType={sortType}\n                query={query}\n                onQueryChange={setQuery}\n                onSelectChange={setSortType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodoId={selectedTodoId}\n                  setSelectedTodoId={setSelectedTodoId}\n                  showModal={setIsModalShowed}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalShowed && (\n        <TodoModal\n          selectedTodoId={selectedTodoId}\n          setSelectedTodoId={(todoId: number) => setSelectedTodoId(todoId)}\n          setIsModalShowed={(param: boolean) => setIsModalShowed(param)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}